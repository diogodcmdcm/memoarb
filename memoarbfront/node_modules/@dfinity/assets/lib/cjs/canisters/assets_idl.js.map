{"version":3,"file":"assets_idl.js","sourceRoot":"","sources":["../../../src/canisters/assets_idl.js"],"names":[],"mappings":";;;AAAO,MAAM,UAAU,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE;IACpC,MAAM,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACtC,MAAM,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC;IACxB,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;IACrB,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAClD,MAAM,oBAAoB,GAAG,GAAG,CAAC,MAAM,CAAC;QACtC,GAAG,EAAE,GAAG;QACR,YAAY,EAAE,GAAG,CAAC,IAAI;QACtB,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;KACvC,CAAC,CAAC;IACH,MAAM,0BAA0B,GAAG,GAAG,CAAC,MAAM,CAAC;QAC5C,GAAG,EAAE,GAAG;QACR,gBAAgB,EAAE,GAAG,CAAC,IAAI;KAC3B,CAAC,CAAC;IACH,MAAM,oBAAoB,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACtD,MAAM,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC;IACxB,MAAM,wBAAwB,GAAG,GAAG,CAAC,MAAM,CAAC;QAC1C,GAAG,EAAE,GAAG;QACR,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClC,SAAS,EAAE,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;QAC3B,gBAAgB,EAAE,GAAG,CAAC,IAAI;KAC3B,CAAC,CAAC;IACH,MAAM,kBAAkB,GAAG,GAAG,CAAC,OAAO,CAAC;QACrC,WAAW,EAAE,oBAAoB;QACjC,iBAAiB,EAAE,0BAA0B;QAC7C,WAAW,EAAE,oBAAoB;QACjC,eAAe,EAAE,wBAAwB;QACzC,KAAK,EAAE,cAAc;KACtB,CAAC,CAAC;IACH,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC;QAC7B,GAAG,EAAE,GAAG,CAAC,IAAI;QACb,MAAM,EAAE,GAAG,CAAC,IAAI;QAChB,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;QACvB,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC;KAC9B,CAAC,CAAC;IACH,MAAM,sBAAsB,GAAG,GAAG,CAAC,MAAM,CAAC;QACxC,GAAG,EAAE,GAAG;QACR,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClC,KAAK,EAAE,GAAG,CAAC,GAAG;QACd,gBAAgB,EAAE,GAAG,CAAC,IAAI;KAC3B,CAAC,CAAC;IACH,MAAM,6BAA6B,GAAG,GAAG,CAAC,MAAM,CAAC;QAC/C,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,sBAAsB,CAAC;QACtC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;KACxB,CAAC,CAAC;IACH,MAAM,iBAAiB,GAAG,GAAG,CAAC,OAAO,CAAC;QACpC,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC;YACnB,KAAK,EAAE,sBAAsB;YAC7B,QAAQ,EAAE,GAAG,CAAC,IAAI,CAChB,CAAC,sBAAsB,CAAC,EACxB,CAAC,GAAG,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,EACxC,CAAC,OAAO,CAAC,CACV;SACF,CAAC;KACH,CAAC,CAAC;IACH,MAAM,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC;QAC9B,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;QACvB,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC;QAC7B,kBAAkB,EAAE,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9C,WAAW,EAAE,GAAG,CAAC,KAAK;KACvB,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;IACrB,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAC5C,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACzC,YAAY,EAAE,GAAG,CAAC,IAAI,CACpB;YACE,GAAG,CAAC,MAAM,CAAC;gBACT,QAAQ,EAAE,OAAO;gBACjB,UAAU,EAAE,GAAG,CAAC,GAAG,CAAC,kBAAkB,CAAC;aACxC,CAAC;SACH,EACD,EAAE,EACF,EAAE,CACH;QACD,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtD,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACjF,YAAY,EAAE,GAAG,CAAC,IAAI,CACpB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,EAC/D,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,EACnC,EAAE,CACH;QACD,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACtD,GAAG,EAAE,GAAG,CAAC,IAAI,CACX,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,gBAAgB,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAC/D;YACE,GAAG,CAAC,MAAM,CAAC;gBACT,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;gBAC1B,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClC,YAAY,EAAE,GAAG,CAAC,IAAI;gBACtB,gBAAgB,EAAE,GAAG,CAAC,IAAI;gBAC1B,YAAY,EAAE,GAAG,CAAC,GAAG;aACtB,CAAC;SACH,EACD,CAAC,OAAO,CAAC,CACV;QACD,SAAS,EAAE,GAAG,CAAC,IAAI,CACjB;YACE,GAAG,CAAC,MAAM,CAAC;gBACT,GAAG,EAAE,GAAG;gBACR,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClC,KAAK,EAAE,GAAG,CAAC,GAAG;gBACd,gBAAgB,EAAE,GAAG,CAAC,IAAI;aAC3B,CAAC;SACH,EACD,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAC5C,CAAC,OAAO,CAAC,CACV;QACD,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;QAChE,+BAA+B,EAAE,GAAG,CAAC,IAAI,CACvC,CAAC,sBAAsB,CAAC,EACxB,CAAC,GAAG,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,EACxC,CAAC,OAAO,CAAC,CACV;QACD,IAAI,EAAE,GAAG,CAAC,IAAI,CACZ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAChB;YACE,GAAG,CAAC,GAAG,CACL,GAAG,CAAC,MAAM,CAAC;gBACT,GAAG,EAAE,GAAG;gBACR,SAAS,EAAE,GAAG,CAAC,GAAG,CAChB,GAAG,CAAC,MAAM,CAAC;oBACT,QAAQ,EAAE,IAAI;oBACd,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClC,MAAM,EAAE,GAAG,CAAC,GAAG;oBACf,gBAAgB,EAAE,GAAG,CAAC,IAAI;iBAC3B,CAAC,CACH;gBACD,YAAY,EAAE,GAAG,CAAC,IAAI;aACvB,CAAC,CACH;SACF,EACD,CAAC,OAAO,CAAC,CACV;QACD,iBAAiB,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,wBAAwB,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QAC/D,KAAK,EAAE,GAAG,CAAC,IAAI,CACb;YACE,GAAG,CAAC,MAAM,CAAC;gBACT,GAAG,EAAE,GAAG;gBACR,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;gBAC1B,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClC,YAAY,EAAE,GAAG,CAAC,IAAI;gBACtB,gBAAgB,EAAE,GAAG,CAAC,IAAI;aAC3B,CAAC;SACH,EACD,EAAE,EACF,EAAE,CACH;QACD,mBAAmB,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,0BAA0B,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;KACpE,CAAC,CAAC;AACL,CAAC,CAAC;AAtJW,QAAA,UAAU,cAsJrB","sourcesContent":["export const idlFactory = ({ IDL }) => {\n  const ClearArguments = IDL.Record({});\n  const BatchId = IDL.Nat;\n  const Key = IDL.Text;\n  const HeaderField = IDL.Tuple(IDL.Text, IDL.Text);  \n  const CreateAssetArguments = IDL.Record({\n    key: Key,\n    content_type: IDL.Text,\n    headers: IDL.Opt(IDL.Vec(HeaderField)),\n  });\n  const UnsetAssetContentArguments = IDL.Record({\n    key: Key,\n    content_encoding: IDL.Text,\n  });\n  const DeleteAssetArguments = IDL.Record({ key: Key });\n  const ChunkId = IDL.Nat;\n  const SetAssetContentArguments = IDL.Record({\n    key: Key,\n    sha256: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    chunk_ids: IDL.Vec(ChunkId),\n    content_encoding: IDL.Text,\n  });\n  const BatchOperationKind = IDL.Variant({\n    CreateAsset: CreateAssetArguments,\n    UnsetAssetContent: UnsetAssetContentArguments,\n    DeleteAsset: DeleteAssetArguments,\n    SetAssetContent: SetAssetContentArguments,\n    Clear: ClearArguments,\n  });\n  const HttpRequest = IDL.Record({\n    url: IDL.Text,\n    method: IDL.Text,\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(HeaderField),\n  });\n  const StreamingCallbackToken = IDL.Record({\n    key: Key,\n    sha256: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    index: IDL.Nat,\n    content_encoding: IDL.Text,\n  });\n  const StreamingCallbackHttpResponse = IDL.Record({\n    token: IDL.Opt(StreamingCallbackToken),\n    body: IDL.Vec(IDL.Nat8),\n  });\n  const StreamingStrategy = IDL.Variant({\n    Callback: IDL.Record({\n      token: StreamingCallbackToken,\n      callback: IDL.Func(\n        [StreamingCallbackToken],\n        [IDL.Opt(StreamingCallbackHttpResponse)],\n        ['query'],\n      ),\n    }),\n  });\n  const HttpResponse = IDL.Record({\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(HeaderField),\n    streaming_strategy: IDL.Opt(StreamingStrategy),\n    status_code: IDL.Nat16,\n  });\n  const Time = IDL.Int;\n  return IDL.Service({\n    authorize: IDL.Func([IDL.Principal], [], []),\n    clear: IDL.Func([ClearArguments], [], []),\n    commit_batch: IDL.Func(\n      [\n        IDL.Record({\n          batch_id: BatchId,\n          operations: IDL.Vec(BatchOperationKind),\n        }),\n      ],\n      [],\n      [],\n    ),\n    create_asset: IDL.Func([CreateAssetArguments], [], []),\n    create_batch: IDL.Func([IDL.Record({})], [IDL.Record({ batch_id: BatchId })], []),\n    create_chunk: IDL.Func(\n      [IDL.Record({ content: IDL.Vec(IDL.Nat8), batch_id: BatchId })],\n      [IDL.Record({ chunk_id: ChunkId })],\n      [],\n    ),\n    delete_asset: IDL.Func([DeleteAssetArguments], [], []),\n    get: IDL.Func(\n      [IDL.Record({ key: Key, accept_encodings: IDL.Vec(IDL.Text) })],\n      [\n        IDL.Record({\n          content: IDL.Vec(IDL.Nat8),\n          sha256: IDL.Opt(IDL.Vec(IDL.Nat8)),\n          content_type: IDL.Text,\n          content_encoding: IDL.Text,\n          total_length: IDL.Nat,\n        }),\n      ],\n      ['query'],\n    ),\n    get_chunk: IDL.Func(\n      [\n        IDL.Record({\n          key: Key,\n          sha256: IDL.Opt(IDL.Vec(IDL.Nat8)),\n          index: IDL.Nat,\n          content_encoding: IDL.Text,\n        }),\n      ],\n      [IDL.Record({ content: IDL.Vec(IDL.Nat8) })],\n      ['query'],\n    ),\n    http_request: IDL.Func([HttpRequest], [HttpResponse], ['query']),\n    http_request_streaming_callback: IDL.Func(\n      [StreamingCallbackToken],\n      [IDL.Opt(StreamingCallbackHttpResponse)],\n      ['query'],\n    ),\n    list: IDL.Func(\n      [IDL.Record({})],\n      [\n        IDL.Vec(\n          IDL.Record({\n            key: Key,\n            encodings: IDL.Vec(\n              IDL.Record({\n                modified: Time,\n                sha256: IDL.Opt(IDL.Vec(IDL.Nat8)),\n                length: IDL.Nat,\n                content_encoding: IDL.Text,\n              }),\n            ),\n            content_type: IDL.Text,\n          }),\n        ),\n      ],\n      ['query'],\n    ),\n    set_asset_content: IDL.Func([SetAssetContentArguments], [], []),\n    store: IDL.Func(\n      [\n        IDL.Record({\n          key: Key,\n          content: IDL.Vec(IDL.Nat8),\n          sha256: IDL.Opt(IDL.Vec(IDL.Nat8)),\n          content_type: IDL.Text,\n          content_encoding: IDL.Text,\n        }),\n      ],\n      [],\n      [],\n    ),\n    unset_asset_content: IDL.Func([UnsetAssetContentArguments], [], []),\n  });\n};\n"]}