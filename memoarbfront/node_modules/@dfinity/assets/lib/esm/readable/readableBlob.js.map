{"version":3,"file":"readableBlob.js","sourceRoot":"","sources":["../../../src/readable/readableBlob.ts"],"names":[],"mappings":"AACA,OAAO,IAAI,MAAM,WAAW,CAAC;AAE7B,MAAM,OAAO,YAAY;IAIvB,YAAY,QAAgB,EAAE,IAAU;QACtC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,IAAW,WAAW;;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,MAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,mCAAI,0BAA0B,CAAC,CAAC;IACxF,CAAC;IAED,IAAW,MAAM;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,IAAI;QACR,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,KAAK;QACT,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,KAAK,CAAC,KAAa,EAAE,GAAW;QACpC,OAAO,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC1E,CAAC;CACF","sourcesContent":["import { Readable } from './readable';\nimport mime from 'mime/lite';\n\nexport class ReadableBlob implements Readable {\n  public readonly fileName: string;\n  private readonly _blob: Blob;\n\n  constructor(fileName: string, blob: Blob) {\n    this.fileName = fileName;\n    this._blob = blob;\n  }\n\n  public get contentType(): string {\n    return this._blob.type || (mime.getType(this.fileName) ?? 'application/octet-stream');\n  }\n\n  public get length(): number {\n    return this._blob.size;\n  }\n\n  async open(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  async close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  async slice(start: number, end: number): Promise<Uint8Array> {\n    return new Uint8Array(await this._blob.slice(start, end).arrayBuffer());\n  }\n}\n"]}