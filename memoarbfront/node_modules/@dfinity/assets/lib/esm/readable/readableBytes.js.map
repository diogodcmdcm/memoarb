{"version":3,"file":"readableBytes.js","sourceRoot":"","sources":["../../../src/readable/readableBytes.ts"],"names":[],"mappings":"AACA,OAAO,IAAI,MAAM,WAAW,CAAC;AAE7B,MAAM,OAAO,aAAa;IAIxB,YAAY,QAAgB,EAAE,KAA0C;QACtE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,YAAY,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5E,CAAC;IAED,IAAW,WAAW;;QACpB,OAAO,MAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,mCAAI,0BAA0B,CAAC;IACnE,CAAC;IAED,IAAW,MAAM;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;IAChC,CAAC;IAEM,KAAK,CAAC,IAAI;QACf,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAEM,KAAK,CAAC,KAAK;QAChB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,KAAa,EAAE,GAAW;QAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACvC,CAAC;CACF","sourcesContent":["import { Readable } from './readable';\nimport mime from 'mime/lite';\n\nexport class ReadableBytes implements Readable {\n  public readonly fileName: string;\n  private readonly _bytes: Uint8Array;\n\n  constructor(fileName: string, bytes: Uint8Array | ArrayBuffer | number[]) {\n    this.fileName = fileName;\n    this._bytes = bytes instanceof Uint8Array ? bytes : new Uint8Array(bytes);\n  }\n\n  public get contentType(): string {\n    return mime.getType(this.fileName) ?? 'application/octet-stream';\n  }\n\n  public get length(): number {\n    return this._bytes.byteLength;\n  }\n\n  public async open(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async slice(start: number, end: number): Promise<Uint8Array> {\n    return this._bytes.slice(start, end);\n  }\n}\n"]}